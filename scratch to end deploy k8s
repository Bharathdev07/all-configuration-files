pipeline {
    agent any
    tools{
        maven 'maven'
    }
  environment{
        SCANNER_HOME= tool 'sonar'
    }
    stages {
        stage('github') {
            steps {
                git branch: 'main', url: 'https://github.com/bharah08/webapp.git'
            }
        }
       stage('maven build') {
           when { expression { params.skip_test != false } }
            steps {
                sh 'mvn clean package'
            }
        }
            steps {
                withSonarQubeEnv('sonar'){
                   sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Shopping-Cart \
                   -Dsonar.java.binaries=. \
                   -Dsonar.projectKey=Shopping-Cart '''
               }
            }
        } 
       
          
           stage('artifact upload to nexus') {
               when { expression { params.skip_test != false } }
            steps {
               nexusArtifactUploader artifacts: [[artifactId: '01-maven-web-app', classifier: '', file: 'target/01-maven-web-app.war', type: 'war']], credentialsId: 'sonarnexus', groupId: 'in.ashokit', nexusUrl: '3.110.120.118:8081', nexusVersion: 'nexus3', protocol: 'http', repository: 'newrepo', version: '2.6.6'
            }
        }
          stage('docker build image') {
              when { expression { params.skip_test != false } }
            steps {
                sh 'docker build -t bharath0812/yesapp:1.0 .'
            }
        }
         stage('push image to dockerhub') {
             when { expression { params.skip_test != false } }
            steps {
                withCredentials([string(credentialsId: 'docker', variable: 'docker')]) {
    sh 'docker login -u bharath0812 -p ${docker}'
    sh 'docker push bharath0812/yesapp:1.0'
}
            }
        }
         stage('deploy k8s') {
            steps {
                 kubernetesDeploy (configs: 'deploy.yaml', kubeconfigId: 'k8s')
            }
        }
    }
}
